{ configs, pkgs, ...}
 
let
  myQtile = pkgs.python3.withPackages (ps: with ps; [
    qtile
    qtile-extras
  ]);
in
{
  environment.systemPackages = with pkgs; [
    myQtile
    # other packages
  ];

{
	imports = [
	./hardware.nix
	];

  nix.settings.experimental-features = [ "nix-command" "flakes" ];
  nixpkgs.config.allowUnfree = true;

  boot.loader.systemd-boot.enable = true;
  boot.loader.efi.canTouchEfiVariables = true;

  networking.hostName = "nixos";
  time.timeZone = "America/Panama";


  environment.pathsToLink = [ "/share/xsessions" ];

  #Service Management 
  services.xserver.enable = true;
  services.xserver.videoDrivers = [ "nvidia"];

 # Add Home Manager qtile as system-wide session
  environment.etc."xdg/xsessions/qtile-hm.desktop".text = ''
    [Desktop Entry]
    Name=Qtile-HM
    Comment=Qtile from Home Manager
    Exec=${myQtile}/bin/qtile start
    Type=Application
  '';
  
  #DisplayManager
  services.xserver.displayManager.lightdm.enable = true;
  services.xserver.displayManager.autoLogin.enable = false;
  services.xserver.displayManager.autoLogin.user = "zorin";
  services.xserver.displayManager.sessionCommands = ''
  services.xserver.desktopManager.xterm.enable = false;
  services.xserver.windowManager.qtile.enable = false;
  services.xserver.displayManager.defaultSession = "qtile-hm";


  # This ensures both system and HM qtile are available
  '';

  #Allow Shell To Operate
  programs.fish.enable = true;

  users.users.zorin ={
 	isNormalUser = true;
 	extraGroups = [ "wheel" "video" ];
 	shell = pkgs.fish;
  };
 
  environment.systemPackages = with pkgs; [
	home-manager
	xterm
	git 
 	vim
	myQtile
  ];

  system.stateVersion = "25.05";
}
