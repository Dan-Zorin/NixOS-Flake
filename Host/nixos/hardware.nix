# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "nvme" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  # EFI Boot Partition
fileSystems."/boot" = {
  device = "/dev/disk/by-uuid/AEBA-E8F0"; # sdd1, vfat EFI
  fsType = "vfat";
};

# Root Btrfs Partition
fileSystems."/" = {
  device = "/dev/disk/by-uuid/36bf77aa-a0b6-45f1-8309-6ea080605f8d"; # sdd2, Btrfs
  fsType = "btrfs";
  options = [ "subvol=@" "ssd" "discard=async" "space_cache=v2" ];
};

# Home subvolume
fileSystems."/home" = {
  device = "/dev/disk/by-uuid/36bf77aa-a0b6-45f1-8309-6ea080605f8d";
  fsType = "btrfs";
  options = [ "subvol=@home" "ssd" "discard=async" "space_cache=v2" ];
};

# Nix subvolume
fileSystems."/nix" = {
  device = "/dev/disk/by-uuid/36bf77aa-a0b6-45f1-8309-6ea080605f8d";
  fsType = "btrfs";
  options = [ "subvol=@nix" "ssd" "discard=async" "space_cache=v2" ];
};

# Var subvolume
fileSystems."/var" = {
  device = "/dev/disk/by-uuid/36bf77aa-a0b6-45f1-8309-6ea080605f8d";
  fsType = "btrfs";
  options = [ "subvol=@var" "ssd" "discard=async" "space_cache=v2" ];
};

# Snapshots subvolume
fileSystems."/ .snapshots" = {
  device = "/dev/disk/by-uuid/36bf77aa-a0b6-45f1-8309-6ea080605f8d";
  fsType = "btrfs";
  options = [ "subvol=@snapshots" "ssd" "discard=async" "space_cache=v2" ];
};

# Swap
swapDevices = [
  { device = "/dev/disk/by-uuid/10da0edb-b5d9-4a91-bd94-957c8a43f62e"; }
];


  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno1.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp4s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
